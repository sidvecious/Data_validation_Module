git commitfail_fast: true
repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v3.4.0
    hooks:
    - id: check-added-large-files
      name: "[file -  check] large file"
      args: [ --maxkb=5000 ]
    - id: check-ast
      name: "[py   -  check] validate python"
    - id: check-builtin-literals
      name: "[py   -  check] builtin literals"
    - id: check-byte-order-marker
      name: "[file -  check] byte order marker"
    - id: check-case-conflict
      name: "[file -  check] case conflict"
    - id: check-docstring-first
      name: "[py   -  check] docstring first"
#    - id: check-executables-have-shebangs
#      name: "[sh   -  check] executable shebang"
    - id: check-json
      name: "[json -  check] validate json"
    - id: check-merge-conflict
      name: "[git  -  check] merge conflict"
    - id: check-symlinks
      name: "[link -  check] broken symlinks"
    - id: check-vcs-permalinks
      name: "[link -  check] vcs permalinks"
    - id: check-xml
      name: "[xml  -  check] validate xml"
    - id: check-yaml
      name: "[yaml -  check] validate yaml"
    - id: debug-statements
      name: "[py   -  check] debug statements"
    - id: detect-aws-credentials
      name: "[cred -  check] aws credentials"
      args: [--allow-missing-credentials]
    - id: detect-private-key
      name: "[cred -  check] private keys"
    - id: end-of-file-fixer
      name: "[py   - format] end of files"
    - id: fix-encoding-pragma
      name: "[file - format] coding pragma"
      args: [ --remove ]
    - id: forbid-new-submodules
      name: "[git  -  check] new submodules"
    - id: mixed-line-ending
      name: "[file - format] mixed line ending"
      args: [ --fix=auto ]
    - id: name-tests-test
      name: "[py   -  check] name tests test"
      args: [ --django ]
    - id: pretty-format-json
      name: "[json - format] pretty json"
      args: [ --autofix,
              --indent=4,
              --no-sort-keys ]
    - id: requirements-txt-fixer
      name: "[reqs - format] fix requirements.txt"
    - id: trailing-whitespace
      name: "[file - format] trim trailing whitespace"
      args: [ --markdown-linebreak-ext=md ]

  - repo: https://github.com/pre-commit/mirrors-isort
    rev: v5.7.0
    hooks:
        - id: isort
          name: "[py   - format] isort"
          args: [--settings-path=pyproject.toml]

  - repo: https://gitlab.com/pycqa/flake8
    rev: 3.9.2
    hooks:
      - id: flake8
        name: "[py   - check] flake8"
        language_version: python3.9

  - repo: https://github.com/ambv/black
    rev: 21.5b0
    hooks:
      - id: black
        name: "[py   - format] black"
        language_version: python3.9

  # Bash auto-formatters and linters
  # --------------------------------

  # beautysh: A Bash beautifier.
  - repo: https://github.com/lovesegfault/beautysh
    rev: 6.0.1
    hooks:
      - id: beautysh
        name: "[bash - format] beautysh"

  # pre-commit-shell: Checks shell scripts against shellcheck.
  - repo: git://github.com/detailyang/pre-commit-shell
    rev: 1.0.5
    hooks:
      - id: shell-lint
        name: "[bash -   lint] shell-lint"

  - repo: local
    hooks:
      - id: pytest-check
        name: pytest-check
        entry: pytest
        language: system
        pass_filenames: false
        always_run: true
